## Description: add some description
## Origin/Author: add some origin or author
## Bug: bug URL
Index: shadow-4.1.4.2+svn3283/man/chpasswd.8.xml
===================================================================
--- shadow-4.1.4.2+svn3283.orig/man/chpasswd.8.xml	2011-01-04 15:48:30.000000000 +0100
+++ shadow-4.1.4.2+svn3283/man/chpasswd.8.xml	2011-01-04 15:48:16.000000000 +0100
@@ -147,6 +147,12 @@
     </variablelist>
     <variablelist remap='IP'>
       <varlistentry>
+        <term><option>-S</option>, <option>--stdout</option></term>
+        <listitem>
+          <para>Report encrypted passwords to stdout instead of updating password file.</para>
+        </listitem>
+       </varlistentry>
+       <varlistentry>
 	<term><option>-h</option>, <option>--help</option></term>
 	<listitem>
 	  <para>Display help message and exit.</para>
Index: shadow-4.1.4.2+svn3283/src/chpasswd.c
===================================================================
--- shadow-4.1.4.2+svn3283.orig/src/chpasswd.c	2011-01-04 15:48:19.000000000 +0100
+++ shadow-4.1.4.2+svn3283/src/chpasswd.c	2011-01-04 15:45:58.000000000 +0100
@@ -70,6 +70,8 @@
 static bool pw_locked = false;
 static bool spw_locked = false;
 
+static int use_stdout = 0;
+
 /* local function prototypes */
 static void fail_exit (int code);
 static void usage (int status);
@@ -132,6 +134,9 @@
 	                "                                crypt algorithms\n"),
 	              usageout);
 #endif				/* USE_SHA_CRYPT */
+        (void) fputs (_("  -S, --stdout                  report encrypted passwords to stdout\n"
+                        "                                instead of changing the passwd file\n"),
+                      usageout);
 	(void) fputs ("\n", usageout);
 
 	exit (status);
@@ -153,15 +158,16 @@
 #ifdef USE_SHA_CRYPT
 		{"sha-rounds", required_argument, NULL, 's'},
 #endif				/* USE_SHA_CRYPT */
+		{"stdout", no_argument, NULL, 'S'},
 		{"help", no_argument, NULL, 'h'},
 		{NULL, 0, NULL, '\0'}
 	};
 
 	while ((c = getopt_long (argc, argv,
 #ifdef USE_SHA_CRYPT
-	                         "c:ehms:",
+	                         "c:ehms:S",
 #else				/* !USE_SHA_CRYPT */
-	                         "c:ehm",
+	                         "c:ehmS",
 #endif				/* !USE_SHA_CRYPT */
 	                         long_options, &option_index)) != -1) {
 		switch (c) {
@@ -189,6 +195,9 @@
 			}
 			break;
 #endif				/* USE_SHA_CRYPT */
+                case 'S':
+                        use_stdout = 1;
+                        break;
 		default:
 			usage (E_USAGE);
 			break;
@@ -252,6 +261,7 @@
  */
 static void check_perms (void)
 {
+	if (use_stdout) return;
 #ifdef USE_PAM
 #ifdef ACCT_TOOLS_SETUID
 	/* If chpasswd uses PAM and is SUID, check the permissions,
@@ -397,17 +407,19 @@
 
 	OPENLOG ("chpasswd");
 
+	if (!use_stdout) {
 	check_perms ();
 
 #ifdef USE_PAM
-	if (!use_pam)
+	if (!use_pam) {
 #endif				/* USE_PAM */
-	{
 		is_shadow_pwd = spw_file_present ();
 
 		open_files ();
+#ifdef USE_PAM
+	}
+#endif				/* USE_PAM */
 	}
-
 	/*
 	 * Read each line, separating the user name from the password. The
 	 * password entry for each user will be looked up in the appropriate
@@ -488,6 +500,10 @@
 			cp = pw_encrypt (newpwd,
 			                 crypt_make_salt(crypt_method, arg));
 		}
+		if (use_stdout) {
+		        fprintf (stdout, "%s:%s\n", name, cp);
+		        continue;
+		}
 
 		/*
 		 * Get the password file entry for this user. The user must
@@ -573,6 +589,7 @@
 		fail_exit (1);
 	}
 
+	if (!use_stdout) {
 #ifdef USE_PAM
 	if (!use_pam)
 #endif				/* USE_PAM */
@@ -582,6 +599,7 @@
 	}
 
 	nscd_flush_cache ("passwd");
+	}
 
 	return (0);
 }
